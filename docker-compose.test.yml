# version: "3.9"
name: my-docker-project

services:
  web:
    image: my-app-image
    container_name: my-app
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    env_file:
      - ./.env.test
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db
  db:
    # container_name: postgres
    container_name: my-db
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.test
    # environment:
    #   - POSTGRES_USER=${DB_USERNAME}
    #   - POSTGRES_PASSWORD=${DB_PASSWORD}
    #   - POSTGRES_DB=${DB_NAME}

  pgadmin:
    container_name: my-pgadmin4
    image: dpage/pgadmin4:latest
    env_file:
      - ./.env.test
    # environment:
    #   - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
    #   - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always
    depends_on:
      - db
  
  redis:
    container_name: my-redis
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
  
  celery:
    image: my-app-image
    container_name: my-celery
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/code
    env_file:
      - ./.env.test
    depends_on:
      - db
      - redis
      - web

  flower:
    image: my-app-image
    container_name: my-flower
    command: celery -A config flower --basic_auth=admin:mikdik
    ports:
      - "5555:5555"
    env_file:
      - ./.env.test
    depends_on:
      - redis

  beat:
    image: my-app-image
    container_name: my-beat
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env.test
    depends_on:
      - redis
      - web  

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: